- name: Initialize Vault
  ansible.builtin.shell:
    cmd: |
      set -o pipefail
      vault operator init -format=json -key-shares=1 -key-threshold=1 | systemd-creds --with-key=host+tpm2 encrypt - /etc/vault.d/vault-init.json.enc
  environment:
    VAULT_ADDR: "unix:///run/vault/vault.sock"
  args:
    creates: "/etc/vault.d/vault-init.json.enc"
    executable: /bin/bash
  register: vault_init

- name: Pause for 1 minute for Vaults to sync init status # noqa: no-handler
  ansible.builtin.pause:
    minutes: 1
  when: vault_init.changed

- name: Unseal local Vault
  ansible.builtin.shell:
    cmd: |
      set -o pipefail
      systemd-creds decrypt /etc/vault.d/vault-init.json.enc | jq .unseal_keys_b64[0] -r | vault write -format=json sys/unseal key=-
  args:
    executable: /bin/bash
  environment:
    VAULT_ADDR: "unix:///run/vault/vault.sock"
  changed_when: "'sealed\": false' not in unseal_local_vault.stdout"
  register: unseal_local_vault

- name: Unseal remote Vaults
  ansible.builtin.shell:
    cmd: |
      set -o pipefail
      systemd-creds decrypt /etc/vault.d/vault-init.json.enc | jq .unseal_keys_b64[0] -r | vault write -format=json sys/unseal key=-
  args:
    executable: /bin/bash
  environment:
    VAULT_ADDR: "https://{{ item }}:8200"
  changed_when: "'sealed\": false' not in unseal_remote_vault.stdout"
  with_items: "{{ groups['vault_servers'] }}"
  register: unseal_remote_vault

# Login with root token, it will be auto revoked later
- name: Login With Root Token
  ansible.builtin.shell:
    cmd: |
      set -o pipefail
      systemd-creds decrypt /etc/vault.d/vault-init.json.enc - | jq .root_token -r | vault login -no-print -
  args:
    executable: /bin/bash
  environment:
    VAULT_ADDR: "unix:///run/vault/vault.sock"
  changed_when: vault_login.rc == 0
  register: vault_login
  failed_when: vault_login.rc != 0 and 'invalid token' not in vault_login.stderr

- name: Copy vault-root-login script
  ansible.builtin.copy:
    src: usr/local/bin/vault-root-login
    dest: /usr/local/bin/vault-root-login
    owner: root
    group: root
    mode: "0755"

- name: Place Vault Root Revoke Timer
  ansible.builtin.copy:
    src: etc/systemd/system/vault-root-token-revoke.timer
    dest: /etc/systemd/system/vault-root-token-revoke.timer
    mode: "0644"
  register: vault_root_token_revoke_service_template

- name: Place Vault Root Revoke Service
  ansible.builtin.copy:
    src: etc/systemd/system/vault-root-token-revoke.service
    dest: /etc/systemd/system/vault-root-token-revoke.service
    mode: "0644"
  register: vault_root_token_revoke_timer_template

- name: Place Vault Unseal Timer
  ansible.builtin.copy:
    src: etc/systemd/system/vault-unseal.timer
    dest: /etc/systemd/system/vault-unseal.timer
    mode: "0644"
  register: vault_unseal_timer_template

- name: Place Vault Unseal Service
  ansible.builtin.template:
    src: etc/systemd/system/vault-unseal.service
    dest: /etc/systemd/system/vault-unseal.service
    mode: "0644"
  register: vault_unseal_service_template

- name: Reload SystemD # noqa: no-handler
  ansible.builtin.systemd:
    daemon_reload: true
  when: >
    vault_root_token_revoke_service_template.changed or
    vault_root_token_revoke_timer_template.changed or
    vault_unseal_service_template.changed or
    vault_unseal_timer_template.changed

- name: Enable and start the revoke timer
  ansible.builtin.systemd_service:
    name: vault-root-token-revoke.timer
    state: started
    enabled: true

- name: Enable and start the unseal timer
  ansible.builtin.systemd_service:
    name: vault-unseal.timer
    state: started
    enabled: true

- name: Configure Audit Logging
  ansible.builtin.command: vault audit enable file file_path=/opt/vault/audit.log
  environment:
    VAULT_ADDR: "unix:///run/vault/vault.sock"
  args:
    creates: /opt/vault/audit.log
  failed_when: vault_audit_log.rc != 0 and 'path already in use' not in vault_audit_log.stderr
  register: vault_audit_log
